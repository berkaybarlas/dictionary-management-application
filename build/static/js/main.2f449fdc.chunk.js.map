{"version":3,"sources":["assets/add.svg","assets/cancel.svg","assets/warning-red.svg","assets/warning-yellow.svg","components/Button.js","components/LineItem.js","components/TableList.js","components/Dictionary/Dictionary.js","components/Dictionary/Dictionaries.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","react_default","a","createElement","className","onClick","this","props","clickHandler","width","src","cancelIcon","alt","React","Component","LineItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleRemoveClick","remove","item","id","warning","warningRedIcon","warningYellowIcon","bind","assertThisInitialized","handleDomainChange","handleRangeChange","e","edit","target","value","domain","onChange","range","problemLevel","components_Button","TableList","items","map","components_LineItem","key","Dictionary","handleClick","change","name","Dictionaries","dictId","index","state","dictionaries","findIndex","setState","lastDictId","updateTable","saveToStorage","itemId","filter","dictionary","history","handleChange","handleSubmit","_this2","preventDefault","length","newItems","newItem","Date","now","concat","nextProps","undefined","_this3","components_Dictionary_Dictionary","onSubmit","addIcon","data","localStorage","setItem","JSON","stringify","recover","parse","getItem","Table","changeDictionary","dictionaryName","type","validate","forceUpdate","number","Dictionary_Dictionaries","components_TableList","App","components_Table","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2f449fdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.e5c3df93.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.283bf64d.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning-red.f656c0d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning-yellow.5a62ddf2.svg\";","import React from \"react\";\nimport \"./components.css\"\nimport PropTypes from \"prop-types\";\nimport cancelIcon from \"../assets/cancel.svg\"\nclass Button extends React.Component {\n    \n    render() {\n        //const className = \"button\";\n        return (\n                <button className={\"line-button\"} onClick={this.props.clickHandler}> \n                <img width={17} src={cancelIcon} alt=\"\"/>\n                </button>\n        );\n    }\n};\n\nButton.propTypes = {\n    name: PropTypes.string,\n    //clickHandler: PropTypes.func,\n};\nexport default Button;","import React from \"react\";\nimport \"./components.css\"\nimport Button from \"./Button\"\nimport warningRedIcon from \"../assets/warning-red.svg\"\nimport warningYellowIcon from \"../assets/warning-yellow.svg\"\n\nclass LineItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleRemoveClick = this.handleRemoveClick.bind(this);\n        this.handleDomainChange = this.handleDomainChange.bind(this);\n        this.handleRangeChange = this.handleRangeChange.bind(this);\n        this.warning = this.warning.bind(this);\n    }\n    handleRemoveClick = () => {\n        this.props.remove(this.props.item.id);\n    };\n\n    handleDomainChange(e) {\n        this.props.edit(this.props.item.id,e.target.value,'domain' );\n    }\n    handleRangeChange(e) {\n        this.props.edit(this.props.item.id,e.target.value,'range' );\n    }\n\n    warning = (props) => {\n        if(props===2){\n            return <img className=\"line-warning\" width={20} src={warningRedIcon} alt=\"\"/> ;\n        }\n        if(props===1){\n            return <img className=\"line-warning\" width={20} src={warningYellowIcon} alt=\"\"/> ;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"line-item\">\n                <form >\n                    <input className=\"line-left\" \n                    value={this.props.item.domain}\n                    onChange={this.handleDomainChange}/>\n                </form>\n                <form className=\"line-info\" >\n                    <input className=\"line-right\" \n                    value={this.props.item.range}\n                    onChange={this.handleRangeChange}/>\n                    {this.warning(this.props.item.problemLevel)}\n                    <Button className=\"line-button\" clickHandler={this.handleRemoveClick}> </Button>\n                </form>\n                \n                \n            </div>\n        )\n    }\n\n}\n\nexport default LineItem;","import React from \"react\";\nimport \"./components.css\"\nimport LineItem from \"./LineItem\";\n\nclass TableList extends React.Component {\n  render() {\n    return (\n      <div className=\"table-list\">\n        {this.props.items.map(item => (\n          <LineItem key={item.id}\n            item={item}\n            remove={this.props.remove}\n            edit={this.props.edit} />\n        ))}\n      </div>\n\n    );\n  }\n}\n\nexport default TableList;","import React, { Component } from 'react';\nimport './Dictionary.css';\nimport \"./../components.css\"\nimport Button from \"../Button\"\nclass Dictionary extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleRemoveClick = this.handleRemoveClick.bind(this);\n    }\n\n    handleClick = () => {\n        \n        this.props.change(this.props.item.id);\n    }\n    \n    handleRemoveClick = () => {\n        this.props.remove(this.props.item.id);\n    };\n\n    render() {\n\n        return (\n            <div className=\"Dictionary\">\n                <button className=\"dictionary-button\"\n                    onClick={this.handleClick}>\n                {this.props.item.name}</button>\n                <Button className=\"line-button\" clickHandler={this.handleRemoveClick}> </Button>\n            </div>\n        );\n    }\n}\n\nexport default Dictionary;\n","import React, { Component } from 'react';\nimport './Dictionary.css';\nimport Dictionary from './Dictionary'\nimport addIcon from \"../../assets/add.svg\"\n\nclass Dictionaries extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dictionaries: [],\n            items: [],\n            dictionary: '',\n            history: { dictionaries: [] },\n            lastDictId: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.saveToStorage = this.saveToStorage.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.remove = this.remove.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ dictionary: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (!this.state.dictionary.length) {\n            return;\n        }\n        let newItems = [];\n        if (this.state.lastDictId === '') {\n            newItems = this.props.items;\n        }\n        const newItem = {\n            id: Date.now(),\n            name: this.state.dictionary,\n            items: newItems,\n        }\n\n        this.setState(state => ({\n            dictionaries: state.dictionaries.concat(newItem),\n            dictionary: '',\n            lastDictId: newItem.id,\n        }), () => {\n            this.handleClick(newItem.id);\n            this.saveToStorage();\n        });\n    }\n\n    handleClick = (dictId) => {\n        const dictionaries = this.state.dictionaries;\n        const index = dictionaries.findIndex((e) => e.id === dictId);\n\n        if (index === -1) {\n            return;\n        }\n\n        this.setState(state => ({\n            lastDictId: dictId,\n        }), () => this.props.change(this.state.dictionaries[index].items, this.state.dictionaries[index].name));\n    }\n\n    updateTable = (dictId, items) => {\n        const dictionaries = this.state.dictionaries;\n        const index = dictionaries.findIndex((e) => e.id === dictId);\n\n        if (index === -1) {\n            return;\n        } else {\n            dictionaries[index].items = items;\n        }\n        this.setState(state => ({\n            dictionaries: dictionaries,\n        }), () => { this.saveToStorage() });\n    }\n\n\n    remove = (itemId) => {\n        this.setState(state => ({\n            dictionaries: state.dictionaries.filter(item => item.id !== itemId)\n        }));\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // You don't have to do this check first, but it can help prevent an unneeded render\n        if ((nextProps !== undefined) & nextProps.items !== this.state.items & nextProps.items !== []) {\n            this.setState({ items: nextProps.items });\n            this.updateTable(this.state.lastDictId, nextProps.items);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <header className=\"table-header\">\n                    Dictionaries\n            </header>\n                <div className=\"Dictionaries\">\n                    <div className=\"dictionary-list\">\n                        {this.state.dictionaries.map(item => (\n                            <Dictionary\n                                className=\"dictionary-item\"\n                                key={item.id}\n                                item={item}\n                                change={this.handleClick}\n                                remove={this.remove} />\n                        ))}\n                    </div>\n                    <form\n                        className=\"Dictionary\"\n                        onSubmit={this.handleSubmit}>\n                        <input\n                            className=\"dictionary-input\"\n                            onChange={this.handleChange}\n                            value={this.state.dictionary} />\n                        <button className=\"line-button\">\n                            <img width={17} src={addIcon} alt=\"\" />\n                        </button>\n\n                    </form>\n\n                </div>\n            </div>\n        );\n    }\n\n    saveToStorage() {\n        let data = this.state.history;\n        data.dictionaries = this.state.dictionaries;\n        localStorage.setItem('dictionaries', JSON.stringify(data));\n    }\n\n    componentDidMount() {\n        this.recover();\n    }\n\n    recover() {\n        //error catch\n        let data = JSON.parse(localStorage.getItem('dictionaries'));\n        if (!data) {\n            return;\n        }\n\n        this.setState({\n            history: data,\n            dictionaries: data.dictionaries,\n        });\n    }\n}\nexport default Dictionaries;\n","import React from \"react\";\nimport \"./components.css\"\nimport TableList from \"./TableList\";\nimport Dictionaries from './Dictionary/Dictionaries'\nimport addIcon from \"../assets/add.svg\"\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            number: 0,\n            items: [],\n            domain: '',\n            range: '',\n            dictionaryName: '',\n            history: { items: [] },\n        };\n        this.handleDomainChange = this.handleDomainChange.bind(this);\n        this.handleRangeChange = this.handleRangeChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.saveToStorage = this.saveToStorage.bind(this);\n        this.recover = this.recover.bind(this);\n        this.remove = this.remove.bind(this);\n        this.edit = this.edit.bind(this);\n        this.validate = this.validate.bind(this);\n        this.changeDictionary = this.changeDictionary.bind(this);\n    }\n\n    changeDictionary = (items, name) => {\n        this.setState({\n            items: items,\n            dictionaryName: name\n        });\n    }\n\n    componentDidMount() {\n        this.recover();\n    }\n\n    recover() {\n        //error catch\n        let data = JSON.parse(localStorage.getItem('history'));\n        if (!data) {\n            return;\n        }\n        this.setState({\n            history: data,\n            items: data.items,\n            dictionaryName: data.dictionaryName,\n        });\n    }\n\n    saveToStorage() {\n        let data = this.state.history;\n        data.items = this.state.items;\n        data.dictionaryName = this.state.dictionaryName;\n        localStorage.setItem('history', JSON.stringify(data));\n    }\n\n    handleDomainChange(e) {\n        this.setState({ domain: e.target.value });\n    }\n    handleRangeChange(e) {\n        this.setState({ range: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (!this.state.domain.length || !this.state.range.length) {\n            return;\n        }\n        const newItem = {\n            id: Date.now(),\n            domain: this.state.domain,\n            range: this.state.range,\n            problemLevel: 0,\n        }\n        this.setState(state => ({\n            items: state.items.concat(newItem),\n            domain: '',\n            range: '',\n        }), () => { this.saveToStorage() });\n\n    }\n    remove = (itemId) => {\n        this.setState(state => ({\n            items: state.items.filter(item => item.id !== itemId)\n        }));\n    }\n    edit = (itemId, value, type) => {\n        const items = this.state.items;\n        const index = items.findIndex((e) => e.id === itemId);\n\n        if (index === -1) {\n            return;\n        } else {\n            items[index][type] = value;\n        }\n        this.setState(state => ({\n            items: items,\n        }), () => { this.saveToStorage() });\n    }\n\n    validate = () => {\n        var Dictionary = {};\n\n        this.state.items.map((e) => {\n            if (Dictionary[e.range] !== undefined) {\n                e.problemLevel = 2;\n            } else if (Dictionary[e.domain] === undefined) {\n                Dictionary[e.domain] = e.range;\n                e.problemLevel = 0;\n            } else {\n                e.problemLevel = 1;\n            }\n            return e;\n        });\n\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <div className=\"App-body\">\n                <Dictionaries\n                    items={this.state.items}\n                    change={this.changeDictionary} />\n                <div>\n                    <header className=\"table-header\">\n                        Dictionary: {this.state.dictionaryName}\n                        <button className=\"validate-button\" onClick={this.validate}> Validate</button>\n                    </header>\n                    <div className=\"table\">\n                        <TableList items={this.state.items} remove={this.remove} edit={this.edit} />\n                        <div >\n                            <form className=\"table-bottom\"\n                                onSubmit={this.handleSubmit}>\n                                <input\n                                    className=\"table-input\"\n                                    id=\"new-table1\"\n                                    onChange={this.handleDomainChange}\n                                    value={this.state.domain} />\n                                <input id=\"new-table2\"\n                                    className=\"table-input\"\n                                    onChange={this.handleRangeChange}\n                                    value={this.state.range} />\n                                <button className=\"table-button\">\n                                    <img width={17} src={addIcon} alt=\"\" />\n                                </button>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport './App.css';\nimport Table from './components/Table'\n\nclass App extends Component {\n  \n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"App-body\">\n            <Table  />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}